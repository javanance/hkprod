package com.gof.entity;
// Generated 2020. 1. 16 ���� 3:15:14 by Hibernate Tools 5.1.0.Beta1

import java.time.LocalDateTime;

import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.gof.enums.EBoolean;
import com.gof.enums.ECoa;
import com.gof.enums.ERollFwdType;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;

/**
 * MapCfGroup generated by hbm2java
 */
@Entity
@IdClass(MapJournalRollFwdId.class)
@Table(name = "MAP_JOURNAL_ROLL_FWD")
@Getter
@NoArgsConstructor
@AllArgsConstructor
@Builder

public class MapJournalRollFwd implements java.io.Serializable {
	private static final long serialVersionUID = -8151467682976876533L;
	
//	@Enumerated(EnumType.STRING)
//	@Id	private ERollFwdType rollFwdType;
	
	@ManyToOne
	@JoinColumn(name = "ROLL_FWD_TYPE")
	@Id	private MstRollFwd mstRollFwd;

//	@Id	private String calcId;
	
	@ManyToOne
	@JoinColumn(name = "CALC_ID")
	@Fetch(FetchMode.JOIN)
	@Id	private MstCalc mstCalc;
	
	@Id	private int subSeq;
	
	@Enumerated(EnumType.STRING)
	private ECoa debitCoa;
	
	@Enumerated(EnumType.STRING)
	private ECoa creditCoa;
	
	@Enumerated(EnumType.STRING)
	private EBoolean	bookingYn;
	
	@Enumerated(EnumType.STRING)
	private EBoolean	useYn;
	
	
	private String remark;
	private String lastModifiedBy;
	private LocalDateTime lastModifiedDate;
	
	public String getPk() {
		return getRollFwdType()+getCalcId();
	}
	@Override
	public boolean equals(Object arg0) {
		return super.equals(arg0);
	}
	
	@Override
	public int hashCode() {
		return super.hashCode();
	}
	
	public ERollFwdType getRollFwdType() {
		return mstRollFwd.getRollFwdType();
	}
	public String getAppliedCalcId() {
		return mstCalc.getAppliedCalcId();
	}
	public String getCalcId() {
		return mstCalc.getCalcId();
	}
	
	public boolean hasCoa(ECoa coaType) {
		return coaType.equals(debitCoa) || coaType.equals(creditCoa);
	}
	
	public double getDebitSignValue() {
		return debitCoa.isCreditEntry()	?-1.0: 1.0;
	}
	
	public double getCreditSignValue() {
		return creditCoa.isCreditEntry()? 1.0: -1.0;
	}
	
	public boolean isDebit(ECoa coaType) {
		return coaType.equals(debitCoa)? true:false;
	}
	
//	public double getSignValue(ECoa coa) {
//		if(creditCoa.equals(coa)) {
//			return (double)coa.getSign();
//		}
//		else if (debitCoa.equals(coa)) {
//			return -1.0* (double)coa.getSign();
//		}
//		else {
//			return 0.0;
//		}
//	}
}