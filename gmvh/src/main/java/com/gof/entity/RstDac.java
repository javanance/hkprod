package com.gof.entity;
// Generated 2020. 1. 16 ���� 3:15:14 by Hibernate Tools 5.1.0.Beta1

import java.time.LocalDateTime;

import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.gof.enums.ECoa;
import com.gof.enums.EOperator;
import com.gof.enums.ERollFwdType;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;

/**
 * RstDac generated by hbm2java
 */
@Entity
@IdClass(RstDacId.class)
//@Table(name = "RST_DAC")
@Table(name = "RST_DAC_SPLIT")
@Getter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class RstDac implements java.io.Serializable{
	private static final long serialVersionUID = -8151467682976876533L;

	@Id private String baseYymm;
	@Id private String gocId;
	
	@Enumerated(EnumType.STRING)
	@Id private ECoa coaId;
	
//	@Enumerated(EnumType.STRING)
//	@Id	private ERollFwdType rollFwdType;
	@ManyToOne
	@JoinColumn(name = "ROLL_FWD_TYPE")
	@Fetch(FetchMode.JOIN)
	@Id	private MstRollFwd mstRollFwd;
	
	@Id private String runsetId;
//	@Id private String calcId;
	
	@ManyToOne
	@JoinColumn(name = "CALC_ID")
	@Fetch(FetchMode.JOIN)
	@Id	private MstCalc mstCalc;
	
	private Integer seq;
	
	@Enumerated(EnumType.STRING)
	private EOperator operatorType;
	private Double boxAmt;
	private Double deltaDacAmt;
	private Double dacAmt;
	
	private String remark;
	private String lastModifiedBy;
	private LocalDateTime lastModifiedDate;
	
	
	public ERollFwdType getRollFwdType() {
		return mstRollFwd.getRollFwdType();
	}

	public String getCalcId() {
		return mstCalc.getCalcId();
	}
	
	public String getAppliedCalcId() {
		return mstCalc.getAppliedCalcId();
	}
	
	@Override
	public boolean equals(Object arg0) {
		return super.equals(arg0);
	}
	@Override
	public int hashCode() {
		return super.hashCode();
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
	 	 return builder
	 		.append(baseYymm).append(",")
	 	 	.append(gocId).append(",")
	 	 	.append(mstRollFwd.getRollFwdType()).append(",")
	 	 	.append(runsetId).append(",")
	 	 	.append(mstCalc.getCalcId()).append(",")
	 	 	.append(seq).append(",")
	 	 	.append(operatorType).append(",")
	 	 	.append(deltaDacAmt).append(",")
	 	 	.append(dacAmt).append(",")
	 	 	.toString(); 
	}
	
//	@Override
//	public String getBoxId() {
//		return rollFwdType.name();
//	}
//	@Override
//	public Double getBoxAmt() {
//		return dacAmt;
//	}
	
}
