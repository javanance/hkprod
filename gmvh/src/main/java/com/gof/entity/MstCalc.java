package com.gof.entity;
// Generated 2020. 1. 16 ���� 3:15:14 by Hibernate Tools 5.1.0.Beta1

import java.io.Serializable;
import java.time.LocalDateTime;

import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.gof.enums.EBoxModel;
import com.gof.enums.ECalcMethod;
import com.gof.enums.ECalcType;
import com.gof.enums.ECfType;
import com.gof.enums.ELiabType;
import com.gof.enums.ELossStep;
import com.gof.enums.EOperator;
import com.gof.enums.EServiceTiming;
import com.gof.enums.EValueDeco;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;

/**
 * MstRollFwd generated by hbm2java
 */
@Entity
@Table(name = "MST_CALC")
@Getter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class MstCalc implements Serializable {
	private static final long serialVersionUID = -8151467682976876533L;

	@Id private String calcId;			
	
	private String calcName;
	
	@Enumerated(EnumType.STRING)
	private ECalcType calcType;
	
	@Enumerated(EnumType.STRING)
	private ELiabType liabType;

//	private String cfGroup;
	@ManyToOne()
	@JoinColumn(name = "CF_GROUP")
	private MstCfGroup cfGroup;

	@Enumerated(EnumType.STRING)
	private EBoxModel boxId;
	
	@Enumerated(EnumType.STRING)
	private EServiceTiming serviceTiming;
	
	@ManyToOne()
	@JoinColumn(name = "REF_CALC_ID", insertable = false, updatable = false)
	private MstCalc refCalc;
	
	@Enumerated(EnumType.STRING)	
	private ECalcMethod calcMethod;
//	private String calcMethod;
	
	@Enumerated(EnumType.STRING)
	private EOperator signAdjust;
	
	@Enumerated(EnumType.STRING)
	private EValueDeco lossAdjust;
	
	@Enumerated(EnumType.STRING)
	private ELossStep lossStep;
	
	private String useYn;
	
	private String lastModifiedBy;
	private LocalDateTime lastModifiedDate;
	
	
	public String getAppliedCalcId() {
		return refCalc!=null? refCalc.getCalcId(): calcId;
	}
	
	@Override
	public boolean equals(Object arg0) {
		return super.equals(arg0);
	}
	@Override
	public int hashCode() {
		return super.hashCode();
	}
	@Override
	public String  toString() {
		return calcId;
	}
	
//	public boolean contains(ECfType cfType) {
//		return getCfGroup().contatins(cfType);
//	}
	public boolean contains(String cfKeyId) {
		return getCfGroup().contatins(cfKeyId);
	}
}
