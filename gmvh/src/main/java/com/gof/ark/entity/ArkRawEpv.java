package com.gof.ark.entity;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.Map;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;
import javax.persistence.Transient;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;

/**
 * CfLv1Raw generated by hbm2java
 */
@Entity
@IdClass(ArkRawEpvId.class)
//@Table(name = "RAW_GOC_ARK_EPV")
@Table(name = "RAW_ARK_EPV")
@Getter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class ArkRawEpv implements Serializable {
	private static final long serialVersionUID = -8151467682976876533L;
	
	@Id	private String driveYm;
	@Id	private String setlYm;
	@Id	private String exeIdno;
	@Id	private String rsDivId;
	@Id	private String csmGrpCd;
	@Id	private String bemmStcd;
	@Id	private String emmStcd;
	@Id	private String ctrDvcd;
	@Id	private String subKey;
	
//	private Double inEpv;
//	private Double outEpv;
//	private Double dacEpv;
	
	private Double exptCashIncomCval;
	private Double exptCashExpendCval;
	private Double insuAcptExpendCval;
	
	private Double ttrmBelAmt;

	@Column(name = "MM1_AF_BEL_AMT")
	private Double mm1AfBelAmt;
	
	@Column(name = "MM2_AF_BEL_AMT")
	private Double mm2AfBelAmt;
	
	@Column(name = "MM3_AF_BEL_AMT")
	private Double mm3AfBelAmt;
	

	private String lastModifiedBy;
	private LocalDateTime lastModifiedDate;
	
	
	@Transient
	private Map<Integer, Double> fwdEpvMap = new HashMap<Integer, Double>();
	
	@Override
	public boolean equals(Object arg0) {
		return super.equals(arg0);
	}
	@Override
	public int hashCode() {
		return super.hashCode();
	}
	
	@Override
	public String toString() {
		StringBuilder 	builder = new StringBuilder();
	 	 return builder
	 		.append(setlYm).append(",")
	 		.append(exeIdno).append(",")
	 	 	.append(rsDivId).append(",")
	 	 	.append(csmGrpCd).append(",")
	 	 	.append(bemmStcd).append(",")
	 	 	.append(emmStcd).append(",")
	 	 	.append(ctrDvcd).append(",")
	 	 	.append(subKey).append(",")
	 	 	.toString();
	}
	
	public Map<Integer, Double> getFwdEpvMap(){
		if(fwdEpvMap.isEmpty()) {
			fwdEpvMap.put(0, getTtrmBelAmt());
			fwdEpvMap.put(1, getMm1AfBelAmt());
			fwdEpvMap.put(2, getMm2AfBelAmt());
			fwdEpvMap.put(3, getMm3AfBelAmt());
		}
		return fwdEpvMap;
	}
	public ArkRawEpv(String setlYm, String rsDivId, String csmGrpCd, String bemmStcd, String emmStcd, String ctrDvcd,
			String subKey, Double ttrmBelAmt, Double mm1AfBelAmt, Double mm2AfBelAmt, Double mm3AfBelAmt ) {
		this.setlYm = setlYm;
		this.rsDivId = rsDivId;
		this.csmGrpCd = csmGrpCd;
		this.bemmStcd = bemmStcd;
		this.emmStcd = emmStcd;
		this.ctrDvcd = ctrDvcd;
		this.subKey = subKey;
		this.ttrmBelAmt = ttrmBelAmt;
		this.mm1AfBelAmt = mm1AfBelAmt;
		this.mm2AfBelAmt = mm2AfBelAmt;
		this.mm3AfBelAmt = mm3AfBelAmt;
	}
	
	
}
