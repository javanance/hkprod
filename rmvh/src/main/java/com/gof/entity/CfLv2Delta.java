package com.gof.entity;
// Generated 2020. 1. 16 ���� 3:15:14 by Hibernate Tools 5.1.0.Beta1

import java.io.Serializable;
import java.time.LocalDateTime;

import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import com.gof.enums.EBoolean;
import com.gof.enums.ECfType;
import com.gof.enums.ECompound;
import com.gof.enums.EContStatus;
import com.gof.enums.ELiabType;
import com.gof.enums.ETiming;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;

/**
 * CfLv3Delta generated by hbm2java
 */
@Entity
@Table(name = "CF_LV2_DELTA")
@Getter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class CfLv2Delta implements Serializable {
	private static final long serialVersionUID = -8151467682976876533L;
	
	@Id
	@SequenceGenerator(name = "COMMON_SEQ", sequenceName = "COMMON_SEQ", initialValue = 1, allocationSize = 50)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "COMMON_SEQ" )
	private Long seqId;
	
	private String baseYymm;
	private String gocId;
	
	@Enumerated(EnumType.STRING)
	private ELiabType liabType;
	
	@Enumerated(EnumType.STRING)
	private EContStatus stStatus;
	
	@Enumerated(EnumType.STRING)
	private EContStatus endStatus;
	
	@Enumerated(EnumType.STRING)
	private EBoolean newContYn;
	
	private String subKey;
	private String runsetId;
	
	private String cfKeyId;
	
	@Enumerated(EnumType.STRING)
	private ECfType cfType;
	
	@Enumerated(EnumType.STRING)
	private ETiming cfTiming;
	
	@Enumerated(EnumType.STRING)
	private EBoolean outflowYn;
	private Double cfMonthNum;
	
	private Double cfAmt;
	private Double prevCfAmt;
	private Double deltaCfAmt;
	
	private String lastModifiedBy;
	private LocalDateTime lastModifiedDate;
	
	@Override
	public boolean equals(Object arg0) {
		return super.equals(arg0);
	}
	@Override
	public int hashCode() {
		return super.hashCode();
	}
	
	public double getDeltaEpv(double intRate) {
		double tenor 		= this.getCfMonthNum();
		double timeFactor 	= tenor/12.0;
		double toDf 		= ECompound.Annualy.getDf(intRate, timeFactor);
		
		return deltaCfAmt * toDf ;
	}
	
	public double getDeltaEpv(double intRate, int tenor) {
		double timeFactor 	= tenor/12.0;
		double toDf 		= ECompound.Annualy.getDf(intRate, timeFactor);
		
		return deltaCfAmt * toDf ;
	}
	
	public double getDeltaEpv(double fromIntRate, double toIntRate) {
		double tenor 		= this.getCfMonthNum();
		double timeFactor 	= tenor/12.0;
		double fromDf 		= ECompound.Annualy.getDf(fromIntRate, timeFactor);
		double toDf 		= ECompound.Annualy.getDf(toIntRate, timeFactor);
		
		return deltaCfAmt * (toDf - fromDf);
	}
}
