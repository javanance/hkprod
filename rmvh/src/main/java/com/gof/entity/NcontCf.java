package com.gof.entity;
// Generated 2020. 1. 16 ���� 3:15:14 by Hibernate Tools 5.1.0.Beta1

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.Map;

import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;

import com.gof.enums.EBoolean;
import com.gof.enums.ECfType;
import com.gof.enums.ECompound;
import com.gof.enums.ETiming;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;

/**
 * NewcontCf generated by hbm2java
 */
@Entity
@IdClass(NcontCfId.class)
@Table(name = "NCONT_CF")
@Getter
@NoArgsConstructor
@AllArgsConstructor
@Builder
//@Slf4j
public class NcontCf implements Serializable {
	private static final long serialVersionUID = -8151467682976876533L;

	@Id	private String baseYymm;
	@Id	private String ctrPolno;
	@Id	private String prodCd;
	@Id	private String cfKeyId;
	
	private Integer cfColSeq;
	private String cfId;

	@Enumerated(EnumType.STRING)
	private ECfType cfType;
	
	@Enumerated(EnumType.STRING)
	@Id	private ETiming cfTiming;
	
	@Enumerated(EnumType.STRING)
	@Id	private EBoolean outflowYn;
	
//	@Id	private Double cfMonthNum;
	private Double cfMonthNum;
	
	@Id	private Integer setlAftPassMmcnt;			//TODO :: change pk from cfMonthNum??? update cfMonthNum of 61st cf!!!!
	private Double cfAmt;
	private Double pvAmt;
	private Double epvAmt;
	
	private Double absCfAmt;
	private Double absPvAmt;
	
	private String rsDivId;
	
	private String remark;
	private String lastModifiedBy;
	private LocalDateTime lastModifiedDate;
	

	
	@Override
	public boolean equals(Object arg0) {
		return super.equals(arg0);
	}
	@Override
	public int hashCode() {
		return super.hashCode();
	}	
	
//	***********************************************************************
//	TODO :
	public double getEpv(Map<Double, Double> currMap) {
		
		double currRate = currMap.getOrDefault(cfMonthNum, 0.0);					
//		log.info("Rate : {},{},{},{},{}", cfMonthNum,currRate);
		return getEpv(currRate);
		
//		double df = ECompound.Annualy.getDf(currRate, (getCfMonthNum() /12.0));
//		return getCfAmt() * df;
	}
	
	public double getEpv(double currRate) {
//		log.info("Rate : {},{},{},{},{}", currRate, getCfMonthNum(), getCtrPolno(), getCfKeyId(), getSetlAftPassMmcnt());
		double df = ECompound.Annualy.getDf(currRate, (getCfMonthNum() /12.0));
//		log.info("Rate : {},{},{},{},{}", currRate, df, cfAmt, matNum+ cfTiming.getAdj(), (matNum + cfTiming.getAdj())/12.0);
		return getCfAmt() * df;
	}
	
//	public NewcontRstEpv create( double intRate) {
//
//		return NewcontRstEpv.builder()
//						.baseYymm(baseYymm)
//						.ctrPolno(ctrPolno)
//						.prodCd(prodCd)
//						.cfKeyId(cfKeyId)
//						.cfColSeq(cfColSeq)
//						.cfId(cfId)
//						.cfType(cfType)
//						.cfTiming(cfTiming)
//						.outflowYn(outflowYn)
//						.cfMonthNum(cfMonthNum)
//						.setlAftPassMmcnt(setlAftPassMmcnt)
//						.cfAmt(cfAmt)
//						.epvAmt(getEpv(intRate))
//						.lastModifiedBy("GMV")
//						.lastModifiedDate(LocalDateTime.now())
//						.build();
//	}
//	
	
//	public NewcontRstEpv create( Map<Double, Double> currMap) {
//
////		log.info("Thread : {}", Thread.currentThread().getName());
//		return NewcontRstEpv.builder()
//						.baseYymm(baseYymm)
//						.ctrPolno(ctrPolno)
//						.cfKeyId(cfKeyId)
//						.prodCd(prodCd)
//						.cfColSeq(cfColSeq)
//						.cfId(cfId)
//						.cfType(cfType)
//						.cfTiming(cfTiming)
//						.outflowYn(outflowYn)
//						.cfMonthNum(cfMonthNum)
//						.setlAftPassMmcnt(setlAftPassMmcnt)
//						.cfAmt(cfAmt)
//						.epvAmt(getEpv(currMap))
//						.lastModifiedBy("GMV")
//						.lastModifiedDate(LocalDateTime.now())
//						.build();
//	}
	
//	
//	
//	public NcontCf updateCfMonth(List<DfLv1CurrRate> curveList, int maxTenor) {
//		
//		double targetDf = pvAmt / cfAmt;
//		double prevDf =1.0;
//		double currDf =1.0;
//		
//		for(DfLv1CurrRate aa: curveList) {
//			if(this.getSetlAftPassMmcnt()==maxTenor && aa.getCfMonthNum() >= maxTenor) {
//				currDf = ECompound.Annualy.getDf(aa.getAdjRfRate(), (aa.getCfMonthNum())/12.0);
//				if(currDf <= targetDf && targetDf < prevDf) {
//					this.cfMonthNum = aa.getCfMonthNum();
//					this.lastModifiedBy ="UPDATE_"+aa.getAdjRfRate() ;
//					this.lastModifiedDate = LocalDateTime.now();
//					
//					log.info("Update Cf : {},{},{},{}", targetDf, cfMonthNum, ctrPolno, aa.getAdjRfRate());
//					
//					break;
//				}
//				prevDf = currDf;
//			}
//		}
//		
//		return this;
//	}
//	
//	
//	public List<NcontCf> updateCfMonth(List<DfLv1CurrRate> curveList, List<Integer> groupTenorList) {
//		return groupTenorList.stream().map(s->updateCfMonth(curveList, s)).collect(toList());
//
//	}
	
	
}
